// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: justice/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateBelonging struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Country string `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
}

func (m *MsgCreateBelonging) Reset()         { *m = MsgCreateBelonging{} }
func (m *MsgCreateBelonging) String() string { return proto.CompactTextString(m) }
func (*MsgCreateBelonging) ProtoMessage()    {}
func (*MsgCreateBelonging) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{0}
}
func (m *MsgCreateBelonging) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateBelonging) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateBelonging.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateBelonging) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateBelonging.Merge(m, src)
}
func (m *MsgCreateBelonging) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateBelonging) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateBelonging.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateBelonging proto.InternalMessageInfo

func (m *MsgCreateBelonging) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateBelonging) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgCreateBelonging) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgCreateBelonging) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

type MsgCreateBelongingResponse struct {
}

func (m *MsgCreateBelongingResponse) Reset()         { *m = MsgCreateBelongingResponse{} }
func (m *MsgCreateBelongingResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateBelongingResponse) ProtoMessage()    {}
func (*MsgCreateBelongingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{1}
}
func (m *MsgCreateBelongingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateBelongingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateBelongingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateBelongingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateBelongingResponse.Merge(m, src)
}
func (m *MsgCreateBelongingResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateBelongingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateBelongingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateBelongingResponse proto.InternalMessageInfo

type MsgUpdateBelonging struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Country string `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
}

func (m *MsgUpdateBelonging) Reset()         { *m = MsgUpdateBelonging{} }
func (m *MsgUpdateBelonging) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateBelonging) ProtoMessage()    {}
func (*MsgUpdateBelonging) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{2}
}
func (m *MsgUpdateBelonging) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateBelonging) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateBelonging.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateBelonging) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateBelonging.Merge(m, src)
}
func (m *MsgUpdateBelonging) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateBelonging) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateBelonging.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateBelonging proto.InternalMessageInfo

func (m *MsgUpdateBelonging) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateBelonging) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgUpdateBelonging) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgUpdateBelonging) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

type MsgUpdateBelongingResponse struct {
}

func (m *MsgUpdateBelongingResponse) Reset()         { *m = MsgUpdateBelongingResponse{} }
func (m *MsgUpdateBelongingResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateBelongingResponse) ProtoMessage()    {}
func (*MsgUpdateBelongingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{3}
}
func (m *MsgUpdateBelongingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateBelongingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateBelongingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateBelongingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateBelongingResponse.Merge(m, src)
}
func (m *MsgUpdateBelongingResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateBelongingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateBelongingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateBelongingResponse proto.InternalMessageInfo

type MsgDeleteBelonging struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgDeleteBelonging) Reset()         { *m = MsgDeleteBelonging{} }
func (m *MsgDeleteBelonging) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteBelonging) ProtoMessage()    {}
func (*MsgDeleteBelonging) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{4}
}
func (m *MsgDeleteBelonging) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteBelonging) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteBelonging.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteBelonging) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteBelonging.Merge(m, src)
}
func (m *MsgDeleteBelonging) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteBelonging) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteBelonging.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteBelonging proto.InternalMessageInfo

func (m *MsgDeleteBelonging) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteBelonging) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgDeleteBelongingResponse struct {
}

func (m *MsgDeleteBelongingResponse) Reset()         { *m = MsgDeleteBelongingResponse{} }
func (m *MsgDeleteBelongingResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteBelongingResponse) ProtoMessage()    {}
func (*MsgDeleteBelongingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{5}
}
func (m *MsgDeleteBelongingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteBelongingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteBelongingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteBelongingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteBelongingResponse.Merge(m, src)
}
func (m *MsgDeleteBelongingResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteBelongingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteBelongingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteBelongingResponse proto.InternalMessageInfo

type MsgCreateCountry struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Food    string `protobuf:"bytes,4,opt,name=food,proto3" json:"food,omitempty"`
}

func (m *MsgCreateCountry) Reset()         { *m = MsgCreateCountry{} }
func (m *MsgCreateCountry) String() string { return proto.CompactTextString(m) }
func (*MsgCreateCountry) ProtoMessage()    {}
func (*MsgCreateCountry) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{6}
}
func (m *MsgCreateCountry) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateCountry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateCountry.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateCountry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateCountry.Merge(m, src)
}
func (m *MsgCreateCountry) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateCountry) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateCountry.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateCountry proto.InternalMessageInfo

func (m *MsgCreateCountry) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateCountry) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgCreateCountry) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgCreateCountry) GetFood() string {
	if m != nil {
		return m.Food
	}
	return ""
}

type MsgCreateCountryResponse struct {
}

func (m *MsgCreateCountryResponse) Reset()         { *m = MsgCreateCountryResponse{} }
func (m *MsgCreateCountryResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateCountryResponse) ProtoMessage()    {}
func (*MsgCreateCountryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{7}
}
func (m *MsgCreateCountryResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateCountryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateCountryResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateCountryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateCountryResponse.Merge(m, src)
}
func (m *MsgCreateCountryResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateCountryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateCountryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateCountryResponse proto.InternalMessageInfo

type MsgUpdateCountry struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Food    string `protobuf:"bytes,4,opt,name=food,proto3" json:"food,omitempty"`
}

func (m *MsgUpdateCountry) Reset()         { *m = MsgUpdateCountry{} }
func (m *MsgUpdateCountry) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateCountry) ProtoMessage()    {}
func (*MsgUpdateCountry) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{8}
}
func (m *MsgUpdateCountry) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateCountry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateCountry.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateCountry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateCountry.Merge(m, src)
}
func (m *MsgUpdateCountry) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateCountry) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateCountry.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateCountry proto.InternalMessageInfo

func (m *MsgUpdateCountry) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateCountry) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MsgUpdateCountry) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgUpdateCountry) GetFood() string {
	if m != nil {
		return m.Food
	}
	return ""
}

type MsgUpdateCountryResponse struct {
}

func (m *MsgUpdateCountryResponse) Reset()         { *m = MsgUpdateCountryResponse{} }
func (m *MsgUpdateCountryResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateCountryResponse) ProtoMessage()    {}
func (*MsgUpdateCountryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{9}
}
func (m *MsgUpdateCountryResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateCountryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateCountryResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateCountryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateCountryResponse.Merge(m, src)
}
func (m *MsgUpdateCountryResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateCountryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateCountryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateCountryResponse proto.InternalMessageInfo

type MsgDeleteCountry struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgDeleteCountry) Reset()         { *m = MsgDeleteCountry{} }
func (m *MsgDeleteCountry) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteCountry) ProtoMessage()    {}
func (*MsgDeleteCountry) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{10}
}
func (m *MsgDeleteCountry) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteCountry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteCountry.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteCountry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteCountry.Merge(m, src)
}
func (m *MsgDeleteCountry) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteCountry) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteCountry.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteCountry proto.InternalMessageInfo

func (m *MsgDeleteCountry) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteCountry) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgDeleteCountryResponse struct {
}

func (m *MsgDeleteCountryResponse) Reset()         { *m = MsgDeleteCountryResponse{} }
func (m *MsgDeleteCountryResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteCountryResponse) ProtoMessage()    {}
func (*MsgDeleteCountryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{11}
}
func (m *MsgDeleteCountryResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteCountryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteCountryResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteCountryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteCountryResponse.Merge(m, src)
}
func (m *MsgDeleteCountryResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteCountryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteCountryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteCountryResponse proto.InternalMessageInfo

type MsgCreatePrepare struct {
	Creator           string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Address           string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	RequireBlockHeigt string `protobuf:"bytes,3,opt,name=requireBlockHeigt,proto3" json:"requireBlockHeigt,omitempty"`
}

func (m *MsgCreatePrepare) Reset()         { *m = MsgCreatePrepare{} }
func (m *MsgCreatePrepare) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePrepare) ProtoMessage()    {}
func (*MsgCreatePrepare) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{12}
}
func (m *MsgCreatePrepare) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePrepare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePrepare.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePrepare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePrepare.Merge(m, src)
}
func (m *MsgCreatePrepare) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePrepare) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePrepare.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePrepare proto.InternalMessageInfo

func (m *MsgCreatePrepare) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreatePrepare) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgCreatePrepare) GetRequireBlockHeigt() string {
	if m != nil {
		return m.RequireBlockHeigt
	}
	return ""
}

type MsgCreatePrepareResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreatePrepareResponse) Reset()         { *m = MsgCreatePrepareResponse{} }
func (m *MsgCreatePrepareResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePrepareResponse) ProtoMessage()    {}
func (*MsgCreatePrepareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{13}
}
func (m *MsgCreatePrepareResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePrepareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePrepareResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePrepareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePrepareResponse.Merge(m, src)
}
func (m *MsgCreatePrepareResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePrepareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePrepareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePrepareResponse proto.InternalMessageInfo

func (m *MsgCreatePrepareResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdatePrepare struct {
	Creator           string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id                uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Address           string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	RequireBlockHeigt string `protobuf:"bytes,4,opt,name=requireBlockHeigt,proto3" json:"requireBlockHeigt,omitempty"`
}

func (m *MsgUpdatePrepare) Reset()         { *m = MsgUpdatePrepare{} }
func (m *MsgUpdatePrepare) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePrepare) ProtoMessage()    {}
func (*MsgUpdatePrepare) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{14}
}
func (m *MsgUpdatePrepare) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePrepare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePrepare.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePrepare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePrepare.Merge(m, src)
}
func (m *MsgUpdatePrepare) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePrepare) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePrepare.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePrepare proto.InternalMessageInfo

func (m *MsgUpdatePrepare) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdatePrepare) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdatePrepare) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgUpdatePrepare) GetRequireBlockHeigt() string {
	if m != nil {
		return m.RequireBlockHeigt
	}
	return ""
}

type MsgUpdatePrepareResponse struct {
}

func (m *MsgUpdatePrepareResponse) Reset()         { *m = MsgUpdatePrepareResponse{} }
func (m *MsgUpdatePrepareResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePrepareResponse) ProtoMessage()    {}
func (*MsgUpdatePrepareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{15}
}
func (m *MsgUpdatePrepareResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePrepareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePrepareResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePrepareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePrepareResponse.Merge(m, src)
}
func (m *MsgUpdatePrepareResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePrepareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePrepareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePrepareResponse proto.InternalMessageInfo

type MsgDeletePrepare struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeletePrepare) Reset()         { *m = MsgDeletePrepare{} }
func (m *MsgDeletePrepare) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePrepare) ProtoMessage()    {}
func (*MsgDeletePrepare) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{16}
}
func (m *MsgDeletePrepare) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePrepare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePrepare.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePrepare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePrepare.Merge(m, src)
}
func (m *MsgDeletePrepare) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePrepare) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePrepare.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePrepare proto.InternalMessageInfo

func (m *MsgDeletePrepare) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeletePrepare) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeletePrepareResponse struct {
}

func (m *MsgDeletePrepareResponse) Reset()         { *m = MsgDeletePrepareResponse{} }
func (m *MsgDeletePrepareResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePrepareResponse) ProtoMessage()    {}
func (*MsgDeletePrepareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{17}
}
func (m *MsgDeletePrepareResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePrepareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePrepareResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePrepareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePrepareResponse.Merge(m, src)
}
func (m *MsgDeletePrepareResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePrepareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePrepareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePrepareResponse proto.InternalMessageInfo

type MsgCreateInvasion struct {
	Creator           string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	FromAddress       string `protobuf:"bytes,2,opt,name=fromAddress,proto3" json:"fromAddress,omitempty"`
	ToAddress         string `protobuf:"bytes,3,opt,name=toAddress,proto3" json:"toAddress,omitempty"`
	RequireBlockHeigt string `protobuf:"bytes,4,opt,name=requireBlockHeigt,proto3" json:"requireBlockHeigt,omitempty"`
}

func (m *MsgCreateInvasion) Reset()         { *m = MsgCreateInvasion{} }
func (m *MsgCreateInvasion) String() string { return proto.CompactTextString(m) }
func (*MsgCreateInvasion) ProtoMessage()    {}
func (*MsgCreateInvasion) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{18}
}
func (m *MsgCreateInvasion) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateInvasion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateInvasion.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateInvasion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateInvasion.Merge(m, src)
}
func (m *MsgCreateInvasion) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateInvasion) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateInvasion.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateInvasion proto.InternalMessageInfo

func (m *MsgCreateInvasion) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateInvasion) GetFromAddress() string {
	if m != nil {
		return m.FromAddress
	}
	return ""
}

func (m *MsgCreateInvasion) GetToAddress() string {
	if m != nil {
		return m.ToAddress
	}
	return ""
}

func (m *MsgCreateInvasion) GetRequireBlockHeigt() string {
	if m != nil {
		return m.RequireBlockHeigt
	}
	return ""
}

type MsgCreateInvasionResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateInvasionResponse) Reset()         { *m = MsgCreateInvasionResponse{} }
func (m *MsgCreateInvasionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateInvasionResponse) ProtoMessage()    {}
func (*MsgCreateInvasionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{19}
}
func (m *MsgCreateInvasionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateInvasionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateInvasionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateInvasionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateInvasionResponse.Merge(m, src)
}
func (m *MsgCreateInvasionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateInvasionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateInvasionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateInvasionResponse proto.InternalMessageInfo

func (m *MsgCreateInvasionResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateInvasion struct {
	Creator           string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id                uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	FromAddress       string `protobuf:"bytes,3,opt,name=fromAddress,proto3" json:"fromAddress,omitempty"`
	ToAddress         string `protobuf:"bytes,4,opt,name=toAddress,proto3" json:"toAddress,omitempty"`
	RequireBlockHeigt string `protobuf:"bytes,5,opt,name=requireBlockHeigt,proto3" json:"requireBlockHeigt,omitempty"`
}

func (m *MsgUpdateInvasion) Reset()         { *m = MsgUpdateInvasion{} }
func (m *MsgUpdateInvasion) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateInvasion) ProtoMessage()    {}
func (*MsgUpdateInvasion) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{20}
}
func (m *MsgUpdateInvasion) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateInvasion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateInvasion.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateInvasion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateInvasion.Merge(m, src)
}
func (m *MsgUpdateInvasion) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateInvasion) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateInvasion.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateInvasion proto.InternalMessageInfo

func (m *MsgUpdateInvasion) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateInvasion) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateInvasion) GetFromAddress() string {
	if m != nil {
		return m.FromAddress
	}
	return ""
}

func (m *MsgUpdateInvasion) GetToAddress() string {
	if m != nil {
		return m.ToAddress
	}
	return ""
}

func (m *MsgUpdateInvasion) GetRequireBlockHeigt() string {
	if m != nil {
		return m.RequireBlockHeigt
	}
	return ""
}

type MsgUpdateInvasionResponse struct {
}

func (m *MsgUpdateInvasionResponse) Reset()         { *m = MsgUpdateInvasionResponse{} }
func (m *MsgUpdateInvasionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateInvasionResponse) ProtoMessage()    {}
func (*MsgUpdateInvasionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{21}
}
func (m *MsgUpdateInvasionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateInvasionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateInvasionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateInvasionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateInvasionResponse.Merge(m, src)
}
func (m *MsgUpdateInvasionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateInvasionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateInvasionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateInvasionResponse proto.InternalMessageInfo

type MsgDeleteInvasion struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteInvasion) Reset()         { *m = MsgDeleteInvasion{} }
func (m *MsgDeleteInvasion) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteInvasion) ProtoMessage()    {}
func (*MsgDeleteInvasion) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{22}
}
func (m *MsgDeleteInvasion) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteInvasion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteInvasion.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteInvasion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteInvasion.Merge(m, src)
}
func (m *MsgDeleteInvasion) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteInvasion) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteInvasion.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteInvasion proto.InternalMessageInfo

func (m *MsgDeleteInvasion) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteInvasion) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteInvasionResponse struct {
}

func (m *MsgDeleteInvasionResponse) Reset()         { *m = MsgDeleteInvasionResponse{} }
func (m *MsgDeleteInvasionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteInvasionResponse) ProtoMessage()    {}
func (*MsgDeleteInvasionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{23}
}
func (m *MsgDeleteInvasionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteInvasionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteInvasionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteInvasionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteInvasionResponse.Merge(m, src)
}
func (m *MsgDeleteInvasionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteInvasionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteInvasionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteInvasionResponse proto.InternalMessageInfo

type MsgMsgFundCountry struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgMsgFundCountry) Reset()         { *m = MsgMsgFundCountry{} }
func (m *MsgMsgFundCountry) String() string { return proto.CompactTextString(m) }
func (*MsgMsgFundCountry) ProtoMessage()    {}
func (*MsgMsgFundCountry) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{24}
}
func (m *MsgMsgFundCountry) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMsgFundCountry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMsgFundCountry.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMsgFundCountry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMsgFundCountry.Merge(m, src)
}
func (m *MsgMsgFundCountry) XXX_Size() int {
	return m.Size()
}
func (m *MsgMsgFundCountry) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMsgFundCountry.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMsgFundCountry proto.InternalMessageInfo

func (m *MsgMsgFundCountry) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgMsgFundCountryResponse struct {
}

func (m *MsgMsgFundCountryResponse) Reset()         { *m = MsgMsgFundCountryResponse{} }
func (m *MsgMsgFundCountryResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMsgFundCountryResponse) ProtoMessage()    {}
func (*MsgMsgFundCountryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{25}
}
func (m *MsgMsgFundCountryResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMsgFundCountryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMsgFundCountryResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMsgFundCountryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMsgFundCountryResponse.Merge(m, src)
}
func (m *MsgMsgFundCountryResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMsgFundCountryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMsgFundCountryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMsgFundCountryResponse proto.InternalMessageInfo

type MsgMsgFallCountry struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgMsgFallCountry) Reset()         { *m = MsgMsgFallCountry{} }
func (m *MsgMsgFallCountry) String() string { return proto.CompactTextString(m) }
func (*MsgMsgFallCountry) ProtoMessage()    {}
func (*MsgMsgFallCountry) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{26}
}
func (m *MsgMsgFallCountry) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMsgFallCountry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMsgFallCountry.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMsgFallCountry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMsgFallCountry.Merge(m, src)
}
func (m *MsgMsgFallCountry) XXX_Size() int {
	return m.Size()
}
func (m *MsgMsgFallCountry) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMsgFallCountry.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMsgFallCountry proto.InternalMessageInfo

func (m *MsgMsgFallCountry) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgMsgFallCountryResponse struct {
}

func (m *MsgMsgFallCountryResponse) Reset()         { *m = MsgMsgFallCountryResponse{} }
func (m *MsgMsgFallCountryResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMsgFallCountryResponse) ProtoMessage()    {}
func (*MsgMsgFallCountryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{27}
}
func (m *MsgMsgFallCountryResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMsgFallCountryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMsgFallCountryResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMsgFallCountryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMsgFallCountryResponse.Merge(m, src)
}
func (m *MsgMsgFallCountryResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMsgFallCountryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMsgFallCountryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMsgFallCountryResponse proto.InternalMessageInfo

type MsgMsgBelongContry struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CountryAddress string `protobuf:"bytes,2,opt,name=countryAddress,proto3" json:"countryAddress,omitempty"`
}

func (m *MsgMsgBelongContry) Reset()         { *m = MsgMsgBelongContry{} }
func (m *MsgMsgBelongContry) String() string { return proto.CompactTextString(m) }
func (*MsgMsgBelongContry) ProtoMessage()    {}
func (*MsgMsgBelongContry) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{28}
}
func (m *MsgMsgBelongContry) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMsgBelongContry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMsgBelongContry.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMsgBelongContry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMsgBelongContry.Merge(m, src)
}
func (m *MsgMsgBelongContry) XXX_Size() int {
	return m.Size()
}
func (m *MsgMsgBelongContry) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMsgBelongContry.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMsgBelongContry proto.InternalMessageInfo

func (m *MsgMsgBelongContry) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgMsgBelongContry) GetCountryAddress() string {
	if m != nil {
		return m.CountryAddress
	}
	return ""
}

type MsgMsgBelongContryResponse struct {
}

func (m *MsgMsgBelongContryResponse) Reset()         { *m = MsgMsgBelongContryResponse{} }
func (m *MsgMsgBelongContryResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMsgBelongContryResponse) ProtoMessage()    {}
func (*MsgMsgBelongContryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{29}
}
func (m *MsgMsgBelongContryResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMsgBelongContryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMsgBelongContryResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMsgBelongContryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMsgBelongContryResponse.Merge(m, src)
}
func (m *MsgMsgBelongContryResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMsgBelongContryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMsgBelongContryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMsgBelongContryResponse proto.InternalMessageInfo

type MsgMsgLeaveCountry struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgMsgLeaveCountry) Reset()         { *m = MsgMsgLeaveCountry{} }
func (m *MsgMsgLeaveCountry) String() string { return proto.CompactTextString(m) }
func (*MsgMsgLeaveCountry) ProtoMessage()    {}
func (*MsgMsgLeaveCountry) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{30}
}
func (m *MsgMsgLeaveCountry) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMsgLeaveCountry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMsgLeaveCountry.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMsgLeaveCountry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMsgLeaveCountry.Merge(m, src)
}
func (m *MsgMsgLeaveCountry) XXX_Size() int {
	return m.Size()
}
func (m *MsgMsgLeaveCountry) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMsgLeaveCountry.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMsgLeaveCountry proto.InternalMessageInfo

func (m *MsgMsgLeaveCountry) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgMsgLeaveCountryResponse struct {
}

func (m *MsgMsgLeaveCountryResponse) Reset()         { *m = MsgMsgLeaveCountryResponse{} }
func (m *MsgMsgLeaveCountryResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMsgLeaveCountryResponse) ProtoMessage()    {}
func (*MsgMsgLeaveCountryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb7bcdb01547d336, []int{31}
}
func (m *MsgMsgLeaveCountryResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMsgLeaveCountryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMsgLeaveCountryResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMsgLeaveCountryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMsgLeaveCountryResponse.Merge(m, src)
}
func (m *MsgMsgLeaveCountryResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMsgLeaveCountryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMsgLeaveCountryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMsgLeaveCountryResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateBelonging)(nil), "chainjustice.chainjustice.justice.MsgCreateBelonging")
	proto.RegisterType((*MsgCreateBelongingResponse)(nil), "chainjustice.chainjustice.justice.MsgCreateBelongingResponse")
	proto.RegisterType((*MsgUpdateBelonging)(nil), "chainjustice.chainjustice.justice.MsgUpdateBelonging")
	proto.RegisterType((*MsgUpdateBelongingResponse)(nil), "chainjustice.chainjustice.justice.MsgUpdateBelongingResponse")
	proto.RegisterType((*MsgDeleteBelonging)(nil), "chainjustice.chainjustice.justice.MsgDeleteBelonging")
	proto.RegisterType((*MsgDeleteBelongingResponse)(nil), "chainjustice.chainjustice.justice.MsgDeleteBelongingResponse")
	proto.RegisterType((*MsgCreateCountry)(nil), "chainjustice.chainjustice.justice.MsgCreateCountry")
	proto.RegisterType((*MsgCreateCountryResponse)(nil), "chainjustice.chainjustice.justice.MsgCreateCountryResponse")
	proto.RegisterType((*MsgUpdateCountry)(nil), "chainjustice.chainjustice.justice.MsgUpdateCountry")
	proto.RegisterType((*MsgUpdateCountryResponse)(nil), "chainjustice.chainjustice.justice.MsgUpdateCountryResponse")
	proto.RegisterType((*MsgDeleteCountry)(nil), "chainjustice.chainjustice.justice.MsgDeleteCountry")
	proto.RegisterType((*MsgDeleteCountryResponse)(nil), "chainjustice.chainjustice.justice.MsgDeleteCountryResponse")
	proto.RegisterType((*MsgCreatePrepare)(nil), "chainjustice.chainjustice.justice.MsgCreatePrepare")
	proto.RegisterType((*MsgCreatePrepareResponse)(nil), "chainjustice.chainjustice.justice.MsgCreatePrepareResponse")
	proto.RegisterType((*MsgUpdatePrepare)(nil), "chainjustice.chainjustice.justice.MsgUpdatePrepare")
	proto.RegisterType((*MsgUpdatePrepareResponse)(nil), "chainjustice.chainjustice.justice.MsgUpdatePrepareResponse")
	proto.RegisterType((*MsgDeletePrepare)(nil), "chainjustice.chainjustice.justice.MsgDeletePrepare")
	proto.RegisterType((*MsgDeletePrepareResponse)(nil), "chainjustice.chainjustice.justice.MsgDeletePrepareResponse")
	proto.RegisterType((*MsgCreateInvasion)(nil), "chainjustice.chainjustice.justice.MsgCreateInvasion")
	proto.RegisterType((*MsgCreateInvasionResponse)(nil), "chainjustice.chainjustice.justice.MsgCreateInvasionResponse")
	proto.RegisterType((*MsgUpdateInvasion)(nil), "chainjustice.chainjustice.justice.MsgUpdateInvasion")
	proto.RegisterType((*MsgUpdateInvasionResponse)(nil), "chainjustice.chainjustice.justice.MsgUpdateInvasionResponse")
	proto.RegisterType((*MsgDeleteInvasion)(nil), "chainjustice.chainjustice.justice.MsgDeleteInvasion")
	proto.RegisterType((*MsgDeleteInvasionResponse)(nil), "chainjustice.chainjustice.justice.MsgDeleteInvasionResponse")
	proto.RegisterType((*MsgMsgFundCountry)(nil), "chainjustice.chainjustice.justice.MsgMsgFundCountry")
	proto.RegisterType((*MsgMsgFundCountryResponse)(nil), "chainjustice.chainjustice.justice.MsgMsgFundCountryResponse")
	proto.RegisterType((*MsgMsgFallCountry)(nil), "chainjustice.chainjustice.justice.MsgMsgFallCountry")
	proto.RegisterType((*MsgMsgFallCountryResponse)(nil), "chainjustice.chainjustice.justice.MsgMsgFallCountryResponse")
	proto.RegisterType((*MsgMsgBelongContry)(nil), "chainjustice.chainjustice.justice.MsgMsgBelongContry")
	proto.RegisterType((*MsgMsgBelongContryResponse)(nil), "chainjustice.chainjustice.justice.MsgMsgBelongContryResponse")
	proto.RegisterType((*MsgMsgLeaveCountry)(nil), "chainjustice.chainjustice.justice.MsgMsgLeaveCountry")
	proto.RegisterType((*MsgMsgLeaveCountryResponse)(nil), "chainjustice.chainjustice.justice.MsgMsgLeaveCountryResponse")
}

func init() { proto.RegisterFile("justice/tx.proto", fileDescriptor_bb7bcdb01547d336) }

var fileDescriptor_bb7bcdb01547d336 = []byte{
	// 822 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x98, 0xcf, 0x4f, 0xd4, 0x40,
	0x14, 0xc7, 0xe9, 0xb2, 0x68, 0x18, 0x23, 0x42, 0xe3, 0x8f, 0x5a, 0x49, 0x83, 0x3d, 0x18, 0xa3,
	0x52, 0x12, 0x17, 0xbc, 0x08, 0x07, 0x16, 0x62, 0x34, 0x71, 0x13, 0x42, 0xa2, 0x07, 0x6f, 0xa5,
	0x1d, 0x4a, 0x75, 0xe9, 0xd4, 0xb6, 0x4b, 0x96, 0xa3, 0x09, 0x89, 0x57, 0xef, 0xfe, 0x09, 0xfe,
	0x23, 0x1e, 0x39, 0x7a, 0x34, 0xf0, 0x1f, 0xf8, 0x17, 0x18, 0xe6, 0xd7, 0xce, 0xcc, 0xb6, 0xb4,
	0xb3, 0x1a, 0x3d, 0xe9, 0xbc, 0x9d, 0xf7, 0x7d, 0x9f, 0xf7, 0x1e, 0xed, 0x7b, 0x29, 0x98, 0x7f,
	0x3f, 0xc8, 0x8b, 0x38, 0x80, 0x2b, 0xc5, 0xd0, 0x4b, 0x33, 0x54, 0x20, 0xf3, 0x7e, 0x70, 0xe0,
	0xc7, 0x09, 0x35, 0x7b, 0xd2, 0x81, 0xfe, 0x6b, 0xdf, 0x61, 0x4e, 0x7b, 0xb0, 0x8f, 0x92, 0x28,
	0x4e, 0x22, 0xe2, 0x6b, 0xdf, 0x62, 0x3f, 0x04, 0x68, 0x90, 0x14, 0xd9, 0xb1, 0x6a, 0x4e, 0x33,
	0x98, 0xfa, 0x19, 0xa4, 0xe6, 0xdb, 0xcc, 0x1c, 0x27, 0x47, 0x7e, 0x1e, 0xa3, 0x84, 0xd8, 0xdd,
	0x21, 0x30, 0x7b, 0x79, 0xb4, 0x95, 0x41, 0xbf, 0x80, 0x5d, 0x16, 0xc1, 0xb4, 0xc0, 0xd5, 0xe0,
	0xc2, 0x84, 0x32, 0xcb, 0x58, 0x32, 0x1e, 0xce, 0xee, 0xb2, 0xa3, 0x79, 0x13, 0xcc, 0xc4, 0x49,
	0x08, 0x87, 0x56, 0x0b, 0xdb, 0xc9, 0xe1, 0xe2, 0xbe, 0x1f, 0x86, 0x19, 0xcc, 0x73, 0x6b, 0x9a,
	0xdc, 0xa7, 0x47, 0xac, 0x44, 0xf8, 0xac, 0x36, 0x55, 0x22, 0x47, 0x77, 0x11, 0xd8, 0xe3, 0x91,
	0x77, 0x61, 0x9e, 0xa2, 0x24, 0x87, 0x94, 0xeb, 0x4d, 0x1a, 0xfe, 0x27, 0x2e, 0x25, 0x32, 0xe7,
	0xda, 0xc6, 0x5c, 0xdb, 0xb0, 0x0f, 0xff, 0x80, 0x8b, 0xc6, 0x50, 0x54, 0x78, 0x8c, 0x14, 0xcc,
	0xf3, 0xca, 0x6c, 0x11, 0xaa, 0xbf, 0x98, 0xb9, 0x09, 0xda, 0xfb, 0x08, 0x85, 0x34, 0x6d, 0xfc,
	0x7f, 0xd7, 0x06, 0x96, 0x1a, 0x51, 0xa1, 0x21, 0xf5, 0xf8, 0x97, 0x34, 0x52, 0x44, 0x4e, 0xd3,
	0xc5, 0x34, 0xa4, 0x72, 0x13, 0xd2, 0x50, 0x7d, 0x49, 0x83, 0xeb, 0x17, 0x42, 0xed, 0x77, 0xc8,
	0x13, 0x74, 0x89, 0xbe, 0x90, 0x57, 0x4b, 0xce, 0xeb, 0x09, 0x58, 0xc8, 0xe0, 0xc7, 0x41, 0x9c,
	0xc1, 0x6e, 0x1f, 0x05, 0x1f, 0x5e, 0xc2, 0x38, 0x2a, 0x68, 0xee, 0xe3, 0x3f, 0xb8, 0x8f, 0x84,
	0xfa, 0xd3, 0xa8, 0x8c, 0xc8, 0x9c, 0x03, 0xad, 0x38, 0xc4, 0x81, 0xdb, 0xbb, 0xad, 0x38, 0x74,
	0x4f, 0x0c, 0xa1, 0x21, 0xf5, 0x88, 0xc4, 0xbd, 0xc5, 0xdc, 0x2f, 0x69, 0x45, 0x29, 0x72, 0xbb,
	0x0a, 0x59, 0x6c, 0x92, 0x82, 0xec, 0xae, 0x0b, 0x4d, 0xd2, 0x26, 0x94, 0xda, 0xa3, 0x2a, 0x7f,
	0x35, 0xc0, 0x02, 0xaf, 0xd4, 0x2b, 0xfa, 0x2a, 0xbb, 0x44, 0x7b, 0x09, 0x5c, 0xdb, 0xcf, 0xd0,
	0xe1, 0xa6, 0xd4, 0x24, 0xd1, 0x64, 0x2e, 0x82, 0xd9, 0x02, 0x6d, 0x4a, 0x15, 0x19, 0x19, 0x34,
	0x6b, 0xf2, 0x18, 0xdc, 0x1d, 0x83, 0xab, 0xec, 0xe3, 0x37, 0x92, 0x0a, 0xa9, 0x60, 0x83, 0x54,
	0xd4, 0x46, 0x2a, 0xa9, 0x4d, 0xd7, 0xa4, 0xd6, 0x6e, 0x94, 0xda, 0x4c, 0x55, 0x6a, 0xf7, 0x70,
	0x6a, 0x32, 0x2c, 0xef, 0xca, 0x06, 0xce, 0x84, 0x74, 0x4c, 0x3f, 0x13, 0xaa, 0x2d, 0xbb, 0x73,
	0xed, 0x65, 0xac, 0xdd, 0xcb, 0xa3, 0x17, 0x83, 0x24, 0xac, 0x7d, 0xe2, 0xa9, 0x96, 0x7c, 0xbd,
	0x44, 0xcb, 0xef, 0xf7, 0x75, 0xb4, 0x46, 0xd7, 0xb9, 0xd6, 0x5b, 0x3c, 0x08, 0x7a, 0x79, 0x44,
	0xde, 0xdf, 0x5b, 0xa8, 0xe6, 0x55, 0xf4, 0x00, 0xcc, 0xd1, 0x09, 0x23, 0xff, 0x31, 0x2a, 0x56,
	0x3a, 0x1a, 0x14, 0x5d, 0x1e, 0xd5, 0x63, 0x51, 0x5f, 0x43, 0xff, 0xa8, 0xfe, 0x05, 0x38, 0x52,
	0x13, 0xef, 0x33, 0xb5, 0xa7, 0xbf, 0xe6, 0xc1, 0x74, 0x2f, 0x8f, 0xcc, 0xcf, 0x06, 0xb8, 0xa1,
	0xae, 0x00, 0x6b, 0x5e, 0xed, 0x6e, 0xe2, 0x8d, 0xcf, 0x6f, 0x7b, 0x63, 0x22, 0x37, 0xfe, 0x90,
	0x5c, 0x90, 0xa8, 0x43, 0xbf, 0x21, 0x89, 0xe2, 0xd6, 0x94, 0xa4, 0x62, 0xd0, 0x63, 0x12, 0x75,
	0xcc, 0x37, 0x24, 0x51, 0xdc, 0x9a, 0x92, 0x54, 0xac, 0x03, 0xe6, 0x27, 0x03, 0x5c, 0x97, 0x97,
	0x81, 0x8e, 0x4e, 0x91, 0xa9, 0x93, 0xfd, 0x7c, 0x02, 0x27, 0x89, 0x41, 0x5e, 0x01, 0x3a, 0x3a,
	0xe5, 0xd5, 0x64, 0x28, 0x1d, 0xfd, 0x98, 0x41, 0x1e, 0xfc, 0x1d, 0x9d, 0xc2, 0x6a, 0x32, 0x94,
	0xae, 0x07, 0x42, 0x2f, 0xd8, 0x5c, 0xd3, 0xea, 0x05, 0x75, 0xd2, 0xeb, 0x85, 0xba, 0x10, 0x8c,
	0x7a, 0xa1, 0xc9, 0x20, 0x39, 0xe9, 0xf5, 0xa2, 0x8c, 0x41, 0x9e, 0xef, 0x5a, 0xbd, 0xd0, 0x64,
	0x28, 0xdd, 0x05, 0xcc, 0x13, 0x03, 0xcc, 0x29, 0x8b, 0xc0, 0xaa, 0x4e, 0x5d, 0x99, 0x97, 0xbd,
	0x3e, 0x89, 0x97, 0x84, 0xa1, 0x0c, 0xf1, 0x55, 0x9d, 0xd2, 0xea, 0x62, 0x94, 0xcf, 0x60, 0x8c,
	0xa1, 0x4c, 0xe0, 0x55, 0x9d, 0xea, 0xea, 0x62, 0x94, 0x8f, 0x6b, 0x8c, 0xa1, 0x0c, 0xeb, 0x86,
	0x18, 0xb2, 0x57, 0x53, 0x8c, 0xf2, 0x49, 0xcf, 0x31, 0x84, 0x39, 0xaf, 0x81, 0x31, 0xf2, 0xd2,
	0xc1, 0x18, 0x5f, 0x12, 0xf0, 0x10, 0x51, 0x57, 0x84, 0xb5, 0xc6, 0x8a, 0xa2, 0x5b, 0xd3, 0x21,
	0x52, 0xb1, 0x38, 0x30, 0x12, 0x69, 0x6d, 0x68, 0x4e, 0x22, 0xba, 0x69, 0x90, 0x94, 0x2d, 0x1d,
	0xdd, 0x9d, 0xef, 0x67, 0x8e, 0x71, 0x7a, 0xe6, 0x18, 0x3f, 0xcf, 0x1c, 0xe3, 0xcb, 0xb9, 0x33,
	0x75, 0x7a, 0xee, 0x4c, 0xfd, 0x38, 0x77, 0xa6, 0xde, 0x3d, 0x8b, 0xe2, 0xe2, 0x60, 0xb0, 0xe7,
	0x05, 0xe8, 0x70, 0x05, 0xab, 0x2e, 0xf3, 0x4f, 0x1c, 0xd2, 0x69, 0xb8, 0xc2, 0x3f, 0xa4, 0x1c,
	0xa7, 0x30, 0xdf, 0xbb, 0x82, 0x3f, 0x65, 0x74, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0x64, 0xf0,
	0xf9, 0x4f, 0x60, 0x11, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateBelonging(ctx context.Context, in *MsgCreateBelonging, opts ...grpc.CallOption) (*MsgCreateBelongingResponse, error)
	UpdateBelonging(ctx context.Context, in *MsgUpdateBelonging, opts ...grpc.CallOption) (*MsgUpdateBelongingResponse, error)
	DeleteBelonging(ctx context.Context, in *MsgDeleteBelonging, opts ...grpc.CallOption) (*MsgDeleteBelongingResponse, error)
	CreateCountry(ctx context.Context, in *MsgCreateCountry, opts ...grpc.CallOption) (*MsgCreateCountryResponse, error)
	UpdateCountry(ctx context.Context, in *MsgUpdateCountry, opts ...grpc.CallOption) (*MsgUpdateCountryResponse, error)
	DeleteCountry(ctx context.Context, in *MsgDeleteCountry, opts ...grpc.CallOption) (*MsgDeleteCountryResponse, error)
	CreatePrepare(ctx context.Context, in *MsgCreatePrepare, opts ...grpc.CallOption) (*MsgCreatePrepareResponse, error)
	UpdatePrepare(ctx context.Context, in *MsgUpdatePrepare, opts ...grpc.CallOption) (*MsgUpdatePrepareResponse, error)
	DeletePrepare(ctx context.Context, in *MsgDeletePrepare, opts ...grpc.CallOption) (*MsgDeletePrepareResponse, error)
	CreateInvasion(ctx context.Context, in *MsgCreateInvasion, opts ...grpc.CallOption) (*MsgCreateInvasionResponse, error)
	UpdateInvasion(ctx context.Context, in *MsgUpdateInvasion, opts ...grpc.CallOption) (*MsgUpdateInvasionResponse, error)
	DeleteInvasion(ctx context.Context, in *MsgDeleteInvasion, opts ...grpc.CallOption) (*MsgDeleteInvasionResponse, error)
	MsgFundCountry(ctx context.Context, in *MsgMsgFundCountry, opts ...grpc.CallOption) (*MsgMsgFundCountryResponse, error)
	MsgFallCountry(ctx context.Context, in *MsgMsgFallCountry, opts ...grpc.CallOption) (*MsgMsgFallCountryResponse, error)
	MsgBelongContry(ctx context.Context, in *MsgMsgBelongContry, opts ...grpc.CallOption) (*MsgMsgBelongContryResponse, error)
	MsgLeaveCountry(ctx context.Context, in *MsgMsgLeaveCountry, opts ...grpc.CallOption) (*MsgMsgLeaveCountryResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateBelonging(ctx context.Context, in *MsgCreateBelonging, opts ...grpc.CallOption) (*MsgCreateBelongingResponse, error) {
	out := new(MsgCreateBelongingResponse)
	err := c.cc.Invoke(ctx, "/chainjustice.chainjustice.justice.Msg/CreateBelonging", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateBelonging(ctx context.Context, in *MsgUpdateBelonging, opts ...grpc.CallOption) (*MsgUpdateBelongingResponse, error) {
	out := new(MsgUpdateBelongingResponse)
	err := c.cc.Invoke(ctx, "/chainjustice.chainjustice.justice.Msg/UpdateBelonging", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteBelonging(ctx context.Context, in *MsgDeleteBelonging, opts ...grpc.CallOption) (*MsgDeleteBelongingResponse, error) {
	out := new(MsgDeleteBelongingResponse)
	err := c.cc.Invoke(ctx, "/chainjustice.chainjustice.justice.Msg/DeleteBelonging", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateCountry(ctx context.Context, in *MsgCreateCountry, opts ...grpc.CallOption) (*MsgCreateCountryResponse, error) {
	out := new(MsgCreateCountryResponse)
	err := c.cc.Invoke(ctx, "/chainjustice.chainjustice.justice.Msg/CreateCountry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateCountry(ctx context.Context, in *MsgUpdateCountry, opts ...grpc.CallOption) (*MsgUpdateCountryResponse, error) {
	out := new(MsgUpdateCountryResponse)
	err := c.cc.Invoke(ctx, "/chainjustice.chainjustice.justice.Msg/UpdateCountry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteCountry(ctx context.Context, in *MsgDeleteCountry, opts ...grpc.CallOption) (*MsgDeleteCountryResponse, error) {
	out := new(MsgDeleteCountryResponse)
	err := c.cc.Invoke(ctx, "/chainjustice.chainjustice.justice.Msg/DeleteCountry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreatePrepare(ctx context.Context, in *MsgCreatePrepare, opts ...grpc.CallOption) (*MsgCreatePrepareResponse, error) {
	out := new(MsgCreatePrepareResponse)
	err := c.cc.Invoke(ctx, "/chainjustice.chainjustice.justice.Msg/CreatePrepare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdatePrepare(ctx context.Context, in *MsgUpdatePrepare, opts ...grpc.CallOption) (*MsgUpdatePrepareResponse, error) {
	out := new(MsgUpdatePrepareResponse)
	err := c.cc.Invoke(ctx, "/chainjustice.chainjustice.justice.Msg/UpdatePrepare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeletePrepare(ctx context.Context, in *MsgDeletePrepare, opts ...grpc.CallOption) (*MsgDeletePrepareResponse, error) {
	out := new(MsgDeletePrepareResponse)
	err := c.cc.Invoke(ctx, "/chainjustice.chainjustice.justice.Msg/DeletePrepare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateInvasion(ctx context.Context, in *MsgCreateInvasion, opts ...grpc.CallOption) (*MsgCreateInvasionResponse, error) {
	out := new(MsgCreateInvasionResponse)
	err := c.cc.Invoke(ctx, "/chainjustice.chainjustice.justice.Msg/CreateInvasion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateInvasion(ctx context.Context, in *MsgUpdateInvasion, opts ...grpc.CallOption) (*MsgUpdateInvasionResponse, error) {
	out := new(MsgUpdateInvasionResponse)
	err := c.cc.Invoke(ctx, "/chainjustice.chainjustice.justice.Msg/UpdateInvasion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteInvasion(ctx context.Context, in *MsgDeleteInvasion, opts ...grpc.CallOption) (*MsgDeleteInvasionResponse, error) {
	out := new(MsgDeleteInvasionResponse)
	err := c.cc.Invoke(ctx, "/chainjustice.chainjustice.justice.Msg/DeleteInvasion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) MsgFundCountry(ctx context.Context, in *MsgMsgFundCountry, opts ...grpc.CallOption) (*MsgMsgFundCountryResponse, error) {
	out := new(MsgMsgFundCountryResponse)
	err := c.cc.Invoke(ctx, "/chainjustice.chainjustice.justice.Msg/MsgFundCountry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) MsgFallCountry(ctx context.Context, in *MsgMsgFallCountry, opts ...grpc.CallOption) (*MsgMsgFallCountryResponse, error) {
	out := new(MsgMsgFallCountryResponse)
	err := c.cc.Invoke(ctx, "/chainjustice.chainjustice.justice.Msg/MsgFallCountry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) MsgBelongContry(ctx context.Context, in *MsgMsgBelongContry, opts ...grpc.CallOption) (*MsgMsgBelongContryResponse, error) {
	out := new(MsgMsgBelongContryResponse)
	err := c.cc.Invoke(ctx, "/chainjustice.chainjustice.justice.Msg/MsgBelongContry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) MsgLeaveCountry(ctx context.Context, in *MsgMsgLeaveCountry, opts ...grpc.CallOption) (*MsgMsgLeaveCountryResponse, error) {
	out := new(MsgMsgLeaveCountryResponse)
	err := c.cc.Invoke(ctx, "/chainjustice.chainjustice.justice.Msg/MsgLeaveCountry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateBelonging(context.Context, *MsgCreateBelonging) (*MsgCreateBelongingResponse, error)
	UpdateBelonging(context.Context, *MsgUpdateBelonging) (*MsgUpdateBelongingResponse, error)
	DeleteBelonging(context.Context, *MsgDeleteBelonging) (*MsgDeleteBelongingResponse, error)
	CreateCountry(context.Context, *MsgCreateCountry) (*MsgCreateCountryResponse, error)
	UpdateCountry(context.Context, *MsgUpdateCountry) (*MsgUpdateCountryResponse, error)
	DeleteCountry(context.Context, *MsgDeleteCountry) (*MsgDeleteCountryResponse, error)
	CreatePrepare(context.Context, *MsgCreatePrepare) (*MsgCreatePrepareResponse, error)
	UpdatePrepare(context.Context, *MsgUpdatePrepare) (*MsgUpdatePrepareResponse, error)
	DeletePrepare(context.Context, *MsgDeletePrepare) (*MsgDeletePrepareResponse, error)
	CreateInvasion(context.Context, *MsgCreateInvasion) (*MsgCreateInvasionResponse, error)
	UpdateInvasion(context.Context, *MsgUpdateInvasion) (*MsgUpdateInvasionResponse, error)
	DeleteInvasion(context.Context, *MsgDeleteInvasion) (*MsgDeleteInvasionResponse, error)
	MsgFundCountry(context.Context, *MsgMsgFundCountry) (*MsgMsgFundCountryResponse, error)
	MsgFallCountry(context.Context, *MsgMsgFallCountry) (*MsgMsgFallCountryResponse, error)
	MsgBelongContry(context.Context, *MsgMsgBelongContry) (*MsgMsgBelongContryResponse, error)
	MsgLeaveCountry(context.Context, *MsgMsgLeaveCountry) (*MsgMsgLeaveCountryResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateBelonging(ctx context.Context, req *MsgCreateBelonging) (*MsgCreateBelongingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBelonging not implemented")
}
func (*UnimplementedMsgServer) UpdateBelonging(ctx context.Context, req *MsgUpdateBelonging) (*MsgUpdateBelongingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBelonging not implemented")
}
func (*UnimplementedMsgServer) DeleteBelonging(ctx context.Context, req *MsgDeleteBelonging) (*MsgDeleteBelongingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBelonging not implemented")
}
func (*UnimplementedMsgServer) CreateCountry(ctx context.Context, req *MsgCreateCountry) (*MsgCreateCountryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCountry not implemented")
}
func (*UnimplementedMsgServer) UpdateCountry(ctx context.Context, req *MsgUpdateCountry) (*MsgUpdateCountryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCountry not implemented")
}
func (*UnimplementedMsgServer) DeleteCountry(ctx context.Context, req *MsgDeleteCountry) (*MsgDeleteCountryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCountry not implemented")
}
func (*UnimplementedMsgServer) CreatePrepare(ctx context.Context, req *MsgCreatePrepare) (*MsgCreatePrepareResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePrepare not implemented")
}
func (*UnimplementedMsgServer) UpdatePrepare(ctx context.Context, req *MsgUpdatePrepare) (*MsgUpdatePrepareResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePrepare not implemented")
}
func (*UnimplementedMsgServer) DeletePrepare(ctx context.Context, req *MsgDeletePrepare) (*MsgDeletePrepareResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePrepare not implemented")
}
func (*UnimplementedMsgServer) CreateInvasion(ctx context.Context, req *MsgCreateInvasion) (*MsgCreateInvasionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateInvasion not implemented")
}
func (*UnimplementedMsgServer) UpdateInvasion(ctx context.Context, req *MsgUpdateInvasion) (*MsgUpdateInvasionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateInvasion not implemented")
}
func (*UnimplementedMsgServer) DeleteInvasion(ctx context.Context, req *MsgDeleteInvasion) (*MsgDeleteInvasionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteInvasion not implemented")
}
func (*UnimplementedMsgServer) MsgFundCountry(ctx context.Context, req *MsgMsgFundCountry) (*MsgMsgFundCountryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MsgFundCountry not implemented")
}
func (*UnimplementedMsgServer) MsgFallCountry(ctx context.Context, req *MsgMsgFallCountry) (*MsgMsgFallCountryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MsgFallCountry not implemented")
}
func (*UnimplementedMsgServer) MsgBelongContry(ctx context.Context, req *MsgMsgBelongContry) (*MsgMsgBelongContryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MsgBelongContry not implemented")
}
func (*UnimplementedMsgServer) MsgLeaveCountry(ctx context.Context, req *MsgMsgLeaveCountry) (*MsgMsgLeaveCountryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MsgLeaveCountry not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateBelonging_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateBelonging)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateBelonging(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chainjustice.chainjustice.justice.Msg/CreateBelonging",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateBelonging(ctx, req.(*MsgCreateBelonging))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateBelonging_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateBelonging)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateBelonging(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chainjustice.chainjustice.justice.Msg/UpdateBelonging",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateBelonging(ctx, req.(*MsgUpdateBelonging))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteBelonging_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteBelonging)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteBelonging(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chainjustice.chainjustice.justice.Msg/DeleteBelonging",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteBelonging(ctx, req.(*MsgDeleteBelonging))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateCountry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateCountry)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateCountry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chainjustice.chainjustice.justice.Msg/CreateCountry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateCountry(ctx, req.(*MsgCreateCountry))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateCountry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateCountry)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateCountry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chainjustice.chainjustice.justice.Msg/UpdateCountry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateCountry(ctx, req.(*MsgUpdateCountry))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteCountry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteCountry)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteCountry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chainjustice.chainjustice.justice.Msg/DeleteCountry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteCountry(ctx, req.(*MsgDeleteCountry))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreatePrepare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreatePrepare)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreatePrepare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chainjustice.chainjustice.justice.Msg/CreatePrepare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreatePrepare(ctx, req.(*MsgCreatePrepare))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdatePrepare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdatePrepare)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdatePrepare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chainjustice.chainjustice.justice.Msg/UpdatePrepare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdatePrepare(ctx, req.(*MsgUpdatePrepare))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeletePrepare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeletePrepare)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeletePrepare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chainjustice.chainjustice.justice.Msg/DeletePrepare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeletePrepare(ctx, req.(*MsgDeletePrepare))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateInvasion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateInvasion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateInvasion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chainjustice.chainjustice.justice.Msg/CreateInvasion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateInvasion(ctx, req.(*MsgCreateInvasion))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateInvasion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateInvasion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateInvasion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chainjustice.chainjustice.justice.Msg/UpdateInvasion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateInvasion(ctx, req.(*MsgUpdateInvasion))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteInvasion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteInvasion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteInvasion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chainjustice.chainjustice.justice.Msg/DeleteInvasion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteInvasion(ctx, req.(*MsgDeleteInvasion))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_MsgFundCountry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMsgFundCountry)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MsgFundCountry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chainjustice.chainjustice.justice.Msg/MsgFundCountry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MsgFundCountry(ctx, req.(*MsgMsgFundCountry))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_MsgFallCountry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMsgFallCountry)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MsgFallCountry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chainjustice.chainjustice.justice.Msg/MsgFallCountry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MsgFallCountry(ctx, req.(*MsgMsgFallCountry))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_MsgBelongContry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMsgBelongContry)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MsgBelongContry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chainjustice.chainjustice.justice.Msg/MsgBelongContry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MsgBelongContry(ctx, req.(*MsgMsgBelongContry))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_MsgLeaveCountry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMsgLeaveCountry)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MsgLeaveCountry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chainjustice.chainjustice.justice.Msg/MsgLeaveCountry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MsgLeaveCountry(ctx, req.(*MsgMsgLeaveCountry))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chainjustice.chainjustice.justice.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBelonging",
			Handler:    _Msg_CreateBelonging_Handler,
		},
		{
			MethodName: "UpdateBelonging",
			Handler:    _Msg_UpdateBelonging_Handler,
		},
		{
			MethodName: "DeleteBelonging",
			Handler:    _Msg_DeleteBelonging_Handler,
		},
		{
			MethodName: "CreateCountry",
			Handler:    _Msg_CreateCountry_Handler,
		},
		{
			MethodName: "UpdateCountry",
			Handler:    _Msg_UpdateCountry_Handler,
		},
		{
			MethodName: "DeleteCountry",
			Handler:    _Msg_DeleteCountry_Handler,
		},
		{
			MethodName: "CreatePrepare",
			Handler:    _Msg_CreatePrepare_Handler,
		},
		{
			MethodName: "UpdatePrepare",
			Handler:    _Msg_UpdatePrepare_Handler,
		},
		{
			MethodName: "DeletePrepare",
			Handler:    _Msg_DeletePrepare_Handler,
		},
		{
			MethodName: "CreateInvasion",
			Handler:    _Msg_CreateInvasion_Handler,
		},
		{
			MethodName: "UpdateInvasion",
			Handler:    _Msg_UpdateInvasion_Handler,
		},
		{
			MethodName: "DeleteInvasion",
			Handler:    _Msg_DeleteInvasion_Handler,
		},
		{
			MethodName: "MsgFundCountry",
			Handler:    _Msg_MsgFundCountry_Handler,
		},
		{
			MethodName: "MsgFallCountry",
			Handler:    _Msg_MsgFallCountry_Handler,
		},
		{
			MethodName: "MsgBelongContry",
			Handler:    _Msg_MsgBelongContry_Handler,
		},
		{
			MethodName: "MsgLeaveCountry",
			Handler:    _Msg_MsgLeaveCountry_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "justice/tx.proto",
}

func (m *MsgCreateBelonging) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateBelonging) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateBelonging) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Country) > 0 {
		i -= len(m.Country)
		copy(dAtA[i:], m.Country)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Country)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateBelongingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateBelongingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateBelongingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateBelonging) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateBelonging) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateBelonging) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Country) > 0 {
		i -= len(m.Country)
		copy(dAtA[i:], m.Country)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Country)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateBelongingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateBelongingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateBelongingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteBelonging) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteBelonging) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteBelonging) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteBelongingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteBelongingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteBelongingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateCountry) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateCountry) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateCountry) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Food) > 0 {
		i -= len(m.Food)
		copy(dAtA[i:], m.Food)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Food)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateCountryResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateCountryResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateCountryResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateCountry) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateCountry) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateCountry) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Food) > 0 {
		i -= len(m.Food)
		copy(dAtA[i:], m.Food)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Food)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateCountryResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateCountryResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateCountryResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteCountry) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteCountry) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteCountry) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteCountryResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteCountryResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteCountryResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreatePrepare) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePrepare) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePrepare) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RequireBlockHeigt) > 0 {
		i -= len(m.RequireBlockHeigt)
		copy(dAtA[i:], m.RequireBlockHeigt)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RequireBlockHeigt)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreatePrepareResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePrepareResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePrepareResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePrepare) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePrepare) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePrepare) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RequireBlockHeigt) > 0 {
		i -= len(m.RequireBlockHeigt)
		copy(dAtA[i:], m.RequireBlockHeigt)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RequireBlockHeigt)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePrepareResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePrepareResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePrepareResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeletePrepare) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePrepare) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePrepare) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeletePrepareResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePrepareResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePrepareResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateInvasion) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateInvasion) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateInvasion) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RequireBlockHeigt) > 0 {
		i -= len(m.RequireBlockHeigt)
		copy(dAtA[i:], m.RequireBlockHeigt)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RequireBlockHeigt)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ToAddress) > 0 {
		i -= len(m.ToAddress)
		copy(dAtA[i:], m.ToAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ToAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.FromAddress) > 0 {
		i -= len(m.FromAddress)
		copy(dAtA[i:], m.FromAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.FromAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateInvasionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateInvasionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateInvasionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateInvasion) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateInvasion) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateInvasion) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RequireBlockHeigt) > 0 {
		i -= len(m.RequireBlockHeigt)
		copy(dAtA[i:], m.RequireBlockHeigt)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RequireBlockHeigt)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ToAddress) > 0 {
		i -= len(m.ToAddress)
		copy(dAtA[i:], m.ToAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ToAddress)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.FromAddress) > 0 {
		i -= len(m.FromAddress)
		copy(dAtA[i:], m.FromAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.FromAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateInvasionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateInvasionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateInvasionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteInvasion) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteInvasion) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteInvasion) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteInvasionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteInvasionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteInvasionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMsgFundCountry) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMsgFundCountry) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMsgFundCountry) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgMsgFundCountryResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMsgFundCountryResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMsgFundCountryResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMsgFallCountry) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMsgFallCountry) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMsgFallCountry) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgMsgFallCountryResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMsgFallCountryResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMsgFallCountryResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMsgBelongContry) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMsgBelongContry) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMsgBelongContry) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.CountryAddress) > 0 {
		i -= len(m.CountryAddress)
		copy(dAtA[i:], m.CountryAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CountryAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgMsgBelongContryResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMsgBelongContryResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMsgBelongContryResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMsgLeaveCountry) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMsgLeaveCountry) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMsgLeaveCountry) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgMsgLeaveCountryResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMsgLeaveCountryResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMsgLeaveCountryResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateBelonging) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Country)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateBelongingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateBelonging) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Country)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateBelongingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteBelonging) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteBelongingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateCountry) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Food)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateCountryResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateCountry) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Food)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateCountryResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteCountry) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteCountryResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreatePrepare) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RequireBlockHeigt)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreatePrepareResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdatePrepare) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RequireBlockHeigt)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdatePrepareResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeletePrepare) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeletePrepareResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateInvasion) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.FromAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ToAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RequireBlockHeigt)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateInvasionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateInvasion) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.FromAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ToAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RequireBlockHeigt)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateInvasionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteInvasion) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteInvasionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMsgFundCountry) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgMsgFundCountryResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMsgFallCountry) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgMsgFallCountryResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMsgBelongContry) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CountryAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgMsgBelongContryResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMsgLeaveCountry) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgMsgLeaveCountryResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateBelonging) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateBelonging: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateBelonging: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Country", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Country = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateBelongingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateBelongingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateBelongingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateBelonging) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateBelonging: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateBelonging: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Country", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Country = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateBelongingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateBelongingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateBelongingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteBelonging) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteBelonging: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteBelonging: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteBelongingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteBelongingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteBelongingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateCountry) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateCountry: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateCountry: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Food", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Food = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateCountryResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateCountryResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateCountryResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateCountry) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateCountry: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateCountry: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Food", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Food = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateCountryResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateCountryResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateCountryResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteCountry) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteCountry: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteCountry: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteCountryResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteCountryResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteCountryResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePrepare) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePrepare: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePrepare: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequireBlockHeigt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequireBlockHeigt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePrepareResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePrepareResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePrepareResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePrepare) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePrepare: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePrepare: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequireBlockHeigt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequireBlockHeigt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePrepareResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePrepareResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePrepareResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePrepare) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePrepare: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePrepare: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePrepareResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePrepareResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePrepareResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateInvasion) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateInvasion: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateInvasion: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FromAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ToAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequireBlockHeigt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequireBlockHeigt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateInvasionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateInvasionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateInvasionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateInvasion) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateInvasion: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateInvasion: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FromAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ToAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequireBlockHeigt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequireBlockHeigt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateInvasionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateInvasionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateInvasionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteInvasion) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteInvasion: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteInvasion: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteInvasionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteInvasionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteInvasionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMsgFundCountry) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMsgFundCountry: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMsgFundCountry: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMsgFundCountryResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMsgFundCountryResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMsgFundCountryResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMsgFallCountry) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMsgFallCountry: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMsgFallCountry: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMsgFallCountryResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMsgFallCountryResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMsgFallCountryResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMsgBelongContry) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMsgBelongContry: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMsgBelongContry: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CountryAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CountryAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMsgBelongContryResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMsgBelongContryResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMsgBelongContryResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMsgLeaveCountry) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMsgLeaveCountry: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMsgLeaveCountry: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMsgLeaveCountryResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMsgLeaveCountryResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMsgLeaveCountryResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
